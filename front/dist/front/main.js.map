{"version":3,"sources":["./src/app/edit-profils/edit-profils.component.html","./src/app/edit-profils/edit-profils.component.ts","./src/app/creation-releve/creation-releve.component.ts","./src/app/creation-releve/creation-releve.component.html","./src/app/services/profil.service.ts","./src/app/services/type-releve.service.ts","./src/environments/environment.ts","./src/app/edit-user/edit-user.component.ts","./src/app/edit-user/edit-user.component.html","./src/app/accueil/accueil.component.ts","./src/app/accueil/accueil.component.html","./src/app/analyse-page/analyse-page.component.ts","./src/app/analyse-page/analyse-page.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/releve/releve.component.ts","./src/app/releve/releve.component.html","./src/app/edit-releve/edit-releve.component.ts","./src/app/edit-releve/edit-releve.component.html","./src/app/app.module.ts","./src/app/services/releve.service.ts","./src/app/services/analyse.service.ts","./src/app/services/utilisateur.service.ts","./src/app/create-user/create-user.component.ts","./src/app/create-user/create-user.component.html","./src/app/pagination/pagination.component.ts","./src/app/pagination/pagination.component.html","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/profil-page/profil-page.component.html","./src/app/profil-page/profil-page.component.ts","./src/app/services/global.ts","./src/app/authentification/authentification.component.ts","./src/app/authentification/authentification.component.html","./src/app/error-message/error-message.component.ts","./src/app/error-message/error-message.component.html","./src/app/valid-message/valid-message.component.ts","./src/app/valid-message/valid-message.component.html","./src/app/releve-page/releve-page.component.html","./src/app/releve-page/releve-page.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<h3>Gestion de votre profil médical</h3>\n\n<app-error-message *ngIf=\"error\" [message]=\"this.errorMessage\"></app-error-message>\n\n<div style=\"margin: 15px\">\n  <span *ngFor=\"let profil of this.profils\" class=\"addprofil\" (click)=\"addProfil(profil.id)\"><i class=\"fas fa-plus-circle\"></i>&nbsp;{{profil.label}}</span>\n</div>\n\n<table class=\"table table-striped\">\n  <thead>\n    <tr>\n      <th>Profils utilisateur</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let profil of this.user.Profils\">\n      <td class=\"delBtn\" (click)=\"deleteProfil(profil.id)\"><span><i class=\"fas fa-trash-alt\"></i></span>&nbsp;&nbsp;{{profil.label}}</td>\n    </tr>\n  </tbody>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport {UtilisateurService} from '../services/utilisateur.service';\nimport {Utilisateur} from '../models/utilisateur.model';\nimport {Profil} from '../models/profil.model';\nimport {ProfilService} from '../services/profil.service';\n\n@Component({\n  selector: 'app-edit-profils',\n  templateUrl: './edit-profils.component.html',\n  styleUrls: ['./edit-profils.component.css']\n})\nexport class EditProfilsComponent implements OnInit {\n\n  user: Utilisateur;\n  profils: Profil[];\n  error: boolean;\n  errorMessage: string;\n\n  constructor(private profilService: ProfilService, private userService: UtilisateurService) {\n    this.error = false;\n    this.errorMessage = 'Un problème est survenu. Vérifiez votre connexion.';\n    this.user = {\n      id: 0,\n      nom: '',\n      prenom: '',\n      login: '',\n      mot_de_passe: '',\n      naissance: '',\n      Profils: [],\n    };\n    this.profils = [];\n  }\n\n  ngOnInit(): void {\n    this.getUser();\n    this.getProfils();\n  }\n\n  getUser(): void {\n    this.userService.getUser(sessionStorage.getItem('id')).subscribe((user) => {\n      if (user as Utilisateur) {\n\n        this.user = user;\n\n      } else {\n        this.error = true;\n      }\n    });\n  }\n\n  getProfils(): void {\n    this.profilService.getProfils().subscribe((profils) => {\n      this.profils = profils;\n    });\n  }\n\n  addProfil(idProfil: number): void {\n\n    this.userService.addUserProfil(this.user.id, idProfil).subscribe( (add) => {\n\n      if (add){\n        this.getUser();\n      }else { this.error = true; }\n    });\n  }\n\n  deleteProfil(idProfil: number): void {\n\n    this.userService.removeUserProfil(this.user.id, idProfil).subscribe( (del) => {\n\n      if (del){\n        this.getUser();\n      }else { this.error = true; }\n    });\n  }\n\n}\n","import { Component, OnInit, Injectable, Output, EventEmitter} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {TypeReleveService} from '../services/type-releve.service';\r\nimport {TypeReleve} from '../models/typeReleve.model';\r\nimport {Releve} from '../models/releve.model';\r\nimport {ReleveService} from '../services/releve.service';\r\nimport {NgbCalendar, NgbDateAdapter, NgbDateParserFormatter, NgbDateStruct, NgbInputDatepickerConfig, NgbDate} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n\r\n/**\r\n * This Service handles how the date is represented in scripts i.e. ngModel.\r\n */\r\n@Injectable()\r\nexport class CustomAdapter extends NgbDateAdapter<string> {\r\n\r\n  readonly DELIMITER = '-';\r\n\r\n  fromModel(value: string | null): NgbDateStruct | null {\r\n    if (value) {\r\n      const date = value.split(this.DELIMITER);\r\n      return {\r\n        day : parseInt(date[0], 10),\r\n        month : parseInt(date[1], 10),\r\n        year : parseInt(date[2], 10)\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  toModel(date: NgbDateStruct | null): string | null {\r\n    return date ? date.day + this.DELIMITER + date.month + this.DELIMITER + date.year : null;\r\n  }\r\n}\r\n\r\n/**\r\n * This Service handles how the date is rendered and parsed from keyboard i.e. in the bound input field.\r\n */\r\n@Injectable()\r\nexport class CustomDateParserFormatter extends NgbDateParserFormatter {\r\n\r\n  readonly DELIMITER = '/';\r\n\r\n  parse(value: string): NgbDateStruct | null {\r\n    if (value) {\r\n      const date = value.split(this.DELIMITER);\r\n      return {\r\n        day : parseInt(date[0], 10),\r\n        month : parseInt(date[1], 10),\r\n        year : parseInt(date[2], 10)\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  addZero(num: number): string {\r\n  \treturn num > 9 ? '' + num : '0' + num;\r\n  }\r\n\r\n  format(date: NgbDateStruct | null): string {\r\n    return date ? this.addZero(date.day) + this.DELIMITER + this.addZero(date.month) + this.DELIMITER + this.addZero(date.year) : '';\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-creation-releve',\r\n  templateUrl: './creation-releve.component.html',\r\n  styleUrls: ['./creation-releve.component.css'],\r\n\r\n  providers: [\r\n    {provide: NgbDateAdapter, useClass: CustomAdapter},\r\n    {provide: NgbDateParserFormatter, useClass: CustomDateParserFormatter},\r\n    NgbInputDatepickerConfig\r\n  ]\r\n})\r\n\r\nexport class CreationReleveComponent implements OnInit {\r\n\r\n  error: boolean;\r\n  errorMessage: string;\r\n  addReleveForm: FormGroup;\r\n  userId: string | null;\r\n  add: boolean;\r\n  validMessage: string;\r\n  typeReleves: TypeReleve[];\r\n  noIMC = true;\r\n  today: NgbDate;\r\n\r\n  @Output()\r\n  createReleve: EventEmitter<Releve> = new EventEmitter<Releve>();\r\n\r\n  constructor(private fb: FormBuilder, private typeReleveService: TypeReleveService, private calendar: NgbCalendar, private dateAdapter: NgbDateAdapter<string>, private config: NgbInputDatepickerConfig, private releveService: ReleveService) {\r\n  \tthis.typeReleves = [];\r\n   this.error = false;\r\n   this.errorMessage = 'Un problème est survenu. Vérifiez votre connexion.';\r\n   this.userId = sessionStorage.getItem('id');\r\n   this.add = false;\r\n   this.validMessage = 'Le relevé a bien été ajouté.';\r\n   this.today = this.calendar.getToday();\r\n\r\n   this.addReleveForm = this.fb.group({\r\n      TypeReleveId: ['1', Validators.required],\r\n      valeur: ['', Validators.required],\r\n      value2: ['', Validators.required],\r\n      prise_de_mesure: [this.dateAdapter.toModel(this.today)!, Validators.required],\r\n    });\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  \tthis.getTypeReleves();\r\n  }\r\n\r\n  getTypeReleves(): void{\r\n    this.typeReleveService.getTypeReleves().subscribe((typeReleves) => {\r\n      this.typeReleves = typeReleves;\r\n    });\r\n  }\r\n\r\n  choiceIMC(): void {\r\n    const id = this.addReleveForm.value.TypeReleveId;\r\n\r\n    if (id === '6') {\r\n      this.noIMC = false;\r\n    } else {\r\n      this.noIMC = true;\r\n  \t}\r\n  }\r\n\r\n  create(): void {\r\n  \tthis.addReleveForm.value.UtilisateurId = this.userId;\r\n\r\n    const id = this.addReleveForm.value.TypeReleveId;\r\n\r\n    if (id === '6') {\r\n      const taille = this.addReleveForm.value.valeur;\r\n      const masse = this.addReleveForm.value.value2;\r\n      this.addReleveForm.value.valeur = this.calculIMC(masse, taille);\r\n    }\r\n\r\n    const splitDate = this.addReleveForm.value.prise_de_mesure.split('-');\r\n\r\n    this.addReleveForm.value.prise_de_mesure = `${splitDate[2]}-${splitDate[1]}-${splitDate[0]}`;\r\n\r\n  \tthis.createReleve.emit(this.addReleveForm.value);\r\n  }\r\n\r\n  calculIMC(masse: number, taille: number): number {\r\n    if (taille > 5) {\r\n      taille = taille/100;\r\n    }\r\n\r\n    return masse/(taille*taille);\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<H3>Création d'un relevé</H3>\r\n\r\n<form [formGroup]=\"addReleveForm\" (ngSubmit)=\"create()\">\r\n\r\n  <app-error-message *ngIf=\"error\" [message]=\"this.errorMessage\"></app-error-message>\r\n  <app-valid-message *ngIf=\"add\" [message]=\"this.validMessage\"></app-valid-message>\r\n\r\n  <div class=\"form-group\">\r\n    <label for=\"TypeReleveId\">Type du relevé :</label>\r\n    <select class=\"form-control\" formControlName=\"TypeReleveId\" id=\"TypeReleveId\" (change)=\"choiceIMC()\">\r\n      <option *ngFor=\"let type of typeReleves\" value=\"{{type.id}}\">{{type.label}}</option>\r\n    </select>\r\n  </div>\r\n\r\n  <div *ngIf=\"noIMC; else IMCDiv\">\r\n\t<div class=\"form-group\">\r\n\t  <label for=\"valeur\">Valeur</label>\r\n\t  <input type=\"number\" class=\"form-control\" id=\"valeur\" placeholder=\"5.5\" formControlName=\"valeur\">\r\n\t</div>\r\n\r\n    <div class=\"form-group\">\r\n      <input type=\"hidden\" class=\"form-control\" id=\"value2\" formControlName=\"value2\">\r\n    </div>\r\n  </div>\r\n\r\n  <ng-template #IMCDiv>\r\n\r\n  \t<div class=\"form-group\">\r\n\t  <label for=\"valeur\">Taille</label>\r\n\t  <input type=\"number\" class=\"form-control\" id=\"valeur\" placeholder=\"5.5\" formControlName=\"valeur\">\r\n\t</div>\r\n\r\n\t<div class=\"form-group\">\r\n\t  <label for=\"value2\">Masse corporelle</label>\r\n\t  <input type=\"number\" class=\"form-control\" id=\"value2\" placeholder=\"5.5\" formControlName=\"value2\">\r\n\t</div>\r\n\r\n  </ng-template>\r\n\r\n  <div class=\"form-group\">\r\n    <label for=\"prise_de_mesure\">Date du relevé</label>\r\n    <div class=\"input-group\">\r\n      <input class=\"form-control\" placeholder=\"dd/mm/aaaa\" name=\"prise_de_mesure\" id=\"prise_de_mesure\" formControlName=\"prise_de_mesure\" ngbDatepicker #d=\"ngbDatepicker\" [minDate]=\"{year: 1900, month: 01, day: 01}\" [maxDate]=\"this.today\">\r\n      <div class=\"input-group-append\">\r\n        <button class=\"btn btn-outline-secondary calendar\" (click)=\"d.toggle()\" type=\"button\"><i class=\"fas fa-calendar-alt\"></i></button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"modal-footer\">\r\n    <button type=\"submit\" class=\"btn btn-outline-dark\">AJOUTER</button>\r\n  </div>\r\n</form>","import { Injectable } from '@angular/core';\nimport {Profil} from '../models/profil.model';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport { VariablesGlobales } from './global';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfilService {\n\n  constructor(private http: HttpClient) { }\n\n  public getProfils(): Observable<Profil[]> {\n    return this.http.get<Profil[]>(`${VariablesGlobales.baseURL}profil/`);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {TypeReleve } from '../models/typeReleve.model';\r\nimport { VariablesGlobales } from './global';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TypeReleveService {\r\n\r\n  constructor(private http: HttpClient) {\r\n\r\n  }\r\n\r\n  public getTypeReleves(): Observable<TypeReleve[]> {\r\n    return this.http.get<TypeReleve[]>(`${VariablesGlobales.baseURL}type_releve`);\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit, Injectable } from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {UtilisateurService} from '../services/utilisateur.service';\r\nimport {Utilisateur} from '../models/utilisateur.model';\r\nimport {NgbCalendar, NgbDateAdapter, NgbDateParserFormatter, NgbDateStruct, NgbInputDatepickerConfig, NgbDate} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n\r\n\r\n/**\r\n * This Service handles how the date is represented in scripts i.e. ngModel.\r\n */\r\n@Injectable()\r\nexport class CustomAdapter extends NgbDateAdapter<string> {\r\n\r\n  readonly DELIMITER = '-';\r\n\r\n  fromModel(value: string | null): NgbDateStruct | null {\r\n    if (value) {\r\n      let date = value.split(this.DELIMITER);\r\n      return {\r\n        day : parseInt(date[0], 10),\r\n        month : parseInt(date[1], 10),\r\n        year : parseInt(date[2], 10)\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  toModel(date: NgbDateStruct | null): string | null {\r\n    return date ? date.day + this.DELIMITER + date.month + this.DELIMITER + date.year : null;\r\n  }\r\n}\r\n\r\n/**\r\n * This Service handles how the date is rendered and parsed from keyboard i.e. in the bound input field.\r\n */\r\n@Injectable()\r\nexport class CustomDateParserFormatter extends NgbDateParserFormatter {\r\n\r\n  readonly DELIMITER = '/';\r\n\r\n  parse(value: string): NgbDateStruct | null {\r\n    if (value) {\r\n      let date = value.split(this.DELIMITER);\r\n      return {\r\n        day : parseInt(date[0], 10),\r\n        month : parseInt(date[1], 10),\r\n        year : parseInt(date[2], 10)\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  addZero(num: number): string {\r\n    return num > 9 ? \"\" + num : \"0\" + num;\r\n  }\r\n\r\n  format(date: NgbDateStruct | null): string {\r\n    return date ? this.addZero(date.day) + this.DELIMITER + this.addZero(date.month) + this.DELIMITER + this.addZero(date.year) : '';\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-edit-user',\r\n  templateUrl: './edit-user.component.html',\r\n  styleUrls: ['./edit-user.component.css'],\r\n\r\n  providers: [\r\n    {provide: NgbDateAdapter, useClass: CustomAdapter},\r\n    {provide: NgbDateParserFormatter, useClass: CustomDateParserFormatter},\r\n    NgbInputDatepickerConfig\r\n  ]\r\n})\r\n\r\n\r\nexport class EditUserComponent implements OnInit {\r\n\r\n  error: boolean;\r\n  errorMessage: string;\r\n  editUserForm: FormGroup;\r\n  userId: string | null;\r\n  update: boolean;\r\n  validMessage: string;\r\n  today: NgbDate;\r\n\r\n  constructor(private fb: FormBuilder, private userService: UtilisateurService, private calendar: NgbCalendar, private dateAdapter: NgbDateAdapter<string>, private config: NgbInputDatepickerConfig) {\r\n    this.error = false;\r\n    this.errorMessage = 'Un problème est survenu. Vérifiez votre connexion.';\r\n    this.editUserForm = this.fb.group({\r\n      nom: ['', Validators.required],\r\n      prenom: ['', Validators.required],\r\n      naissance: ['', Validators.required],\r\n      login: ['', Validators.required],\r\n      mot_de_passe: ['', Validators.required],\r\n    });\r\n    this.userId = sessionStorage.getItem('id');\r\n    this.update = false;\r\n    this.validMessage = 'La mise à jour de vos données est effective';\r\n    this.today = this.calendar.getToday();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.getUser(this.userId).subscribe( (user) => {\r\n      if (user as Utilisateur){\r\n\r\n        const birthSplit = user.naissance.split('-');\r\n        const birth = {year: +birthSplit[0], month: +birthSplit[1], day: +birthSplit[2].split('T')[0]};\r\n\r\n        this.editUserForm = this.fb.group({\r\n          nom: [user.nom, Validators.required],\r\n          prenom: [user.prenom, Validators.required],\r\n          naissance: [this.dateAdapter.toModel(birth), Validators.required],\r\n          login: [user.login, Validators.required],\r\n          mot_de_passe: [user.mot_de_passe, Validators.required],\r\n        });\r\n\r\n      }\r\n      else {\r\n        this.error = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  edit(): void {\r\n\r\n    this.update = false;\r\n    this.error = false;\r\n\r\n    const splitDate = this.editUserForm.value.naissance.split('-');\r\n\r\n    this.editUserForm.value.naissance = `${splitDate[2]}-${splitDate[1]}-${splitDate[0]}`;\r\n\r\n    this.userService.updateUser(this.userId, this.editUserForm.value).subscribe( (update) => {\r\n      if (update){\r\n        this.update = true;\r\n      }\r\n      else {\r\n        this.error = true;\r\n      }\r\n    });\r\n\r\n  }\r\n}\r\n","<h3>Modification de vos données personnelles</h3>\r\n\r\n<form [formGroup]=\"editUserForm\" (ngSubmit)=\"edit()\">\r\n\r\n  <app-error-message *ngIf=\"error\" [message]=\"this.errorMessage\"></app-error-message>\r\n  <app-valid-message *ngIf=\"update\" [message]=\"this.validMessage\"></app-valid-message>\r\n\r\n  <div class=\"form-group\">\r\n    <label for=\"nom\">Nom</label>\r\n    <input type=\"text\" class=\"form-control\" id=\"nom\" placeholder=\"Entrez votre nom de famille\" formControlName=\"nom\">\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <label for=\"prenom\">Prénom</label>\r\n    <input type=\"text\" class=\"form-control\" id=\"prenom\" placeholder=\"Entrez votre prénom\" formControlName=\"prenom\">\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <label for=\"naissance\">Date de Naissance</label>\r\n    <div class=\"input-group\">\r\n      <input class=\"form-control\" placeholder=\"dd/mm/yyyy\"\r\n             name=\"naissance\" id=\"naissance\" formControlName=\"naissance\" ngbDatepicker #d=\"ngbDatepicker\" [minDate]=\"{year: 1900, month: 01, day: 01}\" [maxDate]=\"this.today\">\r\n      <div class=\"input-group-append\">\r\n        <button class=\"btn btn-outline-secondary calendar\" (click)=\"d.toggle()\" type=\"button\"><i class=\"fas fa-calendar-alt\"></i></button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <label for=\"login\">Pseudo</label>\r\n    <input type=\"text\" class=\"form-control\" id=\"login\" placeholder=\"Entrez votre pseudo\" formControlName=\"login\">\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <label for=\"mot_de_passe\">Mot de passe</label>\r\n    <input type=\"password\" class=\"form-control\" id=\"mot_de_passe\" placeholder=\"MotDePasse\" formControlName=\"mot_de_passe\">\r\n  </div>\r\n\r\n  <div class=\"modal-footer\">\r\n    <button type=\"submit\" class=\"btn btn-outline-dark\">VALIDER</button>\r\n  </div>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {Menu} from \"../models/menu.model\";\r\n\r\n@Component({\r\n  selector: 'app-accueil',\r\n  templateUrl: './accueil.component.html',\r\n  styleUrls: ['./accueil.component.css']\r\n})\r\nexport class AccueilComponent implements OnInit {\r\n\r\n  navElems: Menu;\r\n\r\n  constructor() {\r\n    this.navElems = {accueil: true, releves: false, analyses: false, profil: false};\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n\r\n  }\r\n\r\n}\r\n","<app-navbar [navElems]=\"this.navElems\"></app-navbar>\r\n\r\n<div id=\"infopage\">\r\n  <div id=\"infocard\" class=\"card\">\r\n    <img class=\"card-img-top\" src=\"../assets/img/font.jpg\" alt=\"Card image cap\">\r\n    <div class=\"card-body\">\r\n      <h5 class=\"card-title\">A propos</h5>\r\n      <p class=\"card-text\" style=\"text-align: justify\">MonAssistantMédical à été créé dans le but de réaliser un suivi personnel de ses constantes.\r\n        Ce projet à vue le jour dans le cadre d'un projet de cours à l'école polytechnique de l'université Paris-Saclay.\r\n      Cette application est encore au stade de développement et reste totalement libre de droit.\r\n        Toute personne intéressée par le projet est donc libre de participer en proposant des correctifs sur le repo public GitHub.\r\n      </p>\r\n    </div>\r\n    <div class=\"card-body\">\r\n      <h5 class=\"card-title\">Auteurs</h5>\r\n      <ul>\r\n        <li>Rivoallanou-Drevet</li>\r\n        <li>Tony Lim</li>\r\n        <li>Nicolas Bourneuf</li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"card-body\">\r\n      <a href=\"https://github.com/NikoB9/MonAssistantMedical\" rel=\"noreferrer\" class=\"card-link\" target=\"_blank\"><i class=\"fab fa-github\"></i>&nbsp;&nbsp;Ressources</a>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Menu } from '../models/menu.model';\r\nimport { UtilisateurService } from '../services/utilisateur.service';\r\nimport { TypeReleve } from '../models/typeReleve.model';\r\nimport { Releve, ComplexeReleve } from '../models/releve.model';\r\nimport { ChartType, Column } from 'angular-google-charts';\r\nimport { AnalyseService } from '../services/analyse.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\nconst ANIMATION_DURATION = 1500;\r\nconst RED_COLOR_ID = 3;\r\n@Component({\r\n  selector: 'app-analyse-page',\r\n  templateUrl: './analyse-page.component.html',\r\n  styleUrls: ['./analyse-page.component.css']\r\n})\r\nexport class AnalysePageComponent implements OnInit {\r\n  public chart: {\r\n    title: string;\r\n    type: ChartType;\r\n    data: any[][];\r\n    columns?: Column[];\r\n    options: {\r\n      legend: {};\r\n      colors: string[];\r\n      series: {};\r\n      animation: {};\r\n    };\r\n  } = {\r\n    title: 'Evolution des relevés',\r\n    type: ChartType.LineChart,\r\n    columns: [],\r\n    data: [],\r\n    options: {\r\n      legend: {\r\n        position: 'none'\r\n      },\r\n      colors: [],\r\n      series: {},\r\n      animation: {\r\n        duration: ANIMATION_DURATION,\r\n        startup: true,\r\n        easing: \"inAndOut\"\r\n      },\r\n    }\r\n  };\r\n  public chartValues: {\r\n    [idType: string]:\r\n    {\r\n      data: any[][];\r\n      columns: Column[];\r\n      colors: string[];\r\n      series: any;\r\n    }\r\n  } = {};\r\n\r\n  id: string | null;\r\n  typeReleves: TypeReleve[];\r\n  analyseForm: FormGroup;\r\n  navElems: Menu;\r\n  connected: boolean;\r\n  errorMessage: string;\r\n  idTypeSelected: string;\r\n\r\n  constructor(private fb: FormBuilder, private analyseService: AnalyseService, private utilisateurService: UtilisateurService) {\r\n    this.typeReleves = [];\r\n    this.id = sessionStorage?.getItem('id');\r\n    this.navElems = { accueil: false, releves: false, analyses: true, profil: false };\r\n    this.connected = sessionStorage?.getItem('id') !== null;\r\n    this.errorMessage = 'Vous êtes déconnecté. Veuillez vous connecter afin d\\'accéder à cette page';\r\n    this.idTypeSelected = '-1';\r\n    this.analyseForm = this.fb.group({\r\n      TypeReleveId: ['1', Validators.required]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.chart = {\r\n      title: 'Evolution des relevés',\r\n      type: ChartType.LineChart,\r\n      columns: [],\r\n      data: [],\r\n      options: {\r\n        legend: {\r\n          position: 'none'\r\n        },\r\n        colors: [],\r\n        series: {},\r\n        animation: {\r\n          duration: ANIMATION_DURATION,\r\n          startup: true,\r\n          easing: \"inAndOut\"\r\n        },\r\n      }\r\n    };\r\n\r\n    this.getReleves();\r\n  }\r\n\r\n  getReleves(): void {\r\n    this.cursor(\"wait\");\r\n    this.utilisateurService.getUserReleves(this.id).subscribe((releves) => {\r\n      this.cursor(\"initial\");\r\n      releves.complexesReleves.forEach(complexeReleve => {\r\n        const idType: number = complexeReleve.releve.TypeReleve.id\r\n        const releve: Releve = complexeReleve.releve\r\n        if (!this.typeReleves.some(e => e.id === idType)) {\r\n          if (this.idTypeSelected === '-1') {\r\n            this.idTypeSelected = \"\" + idType;\r\n          }\r\n          this.typeReleves.push(releve.TypeReleve);\r\n          this.chartValues[idType] = {\r\n            data: [],\r\n            columns: [\r\n              'Date',\r\n              'Valeur'\r\n            ],\r\n            colors: ['blue'],\r\n            series: {\r\n              0: {\r\n                lineWidth: 3\r\n              }\r\n            }\r\n          }\r\n        }\r\n        const splitedDate = releve.prise_de_mesure.split('-');\r\n        const date = splitedDate[1] + \"/\" + splitedDate[2].substr(0,2) + \"/\" + splitedDate[0]\r\n        this.chartValues[idType]['data'].push([new Date(date), releve.valeur]);\r\n      });\r\n      this.idTypeSelected = this.analyseForm.value.TypeReleveId;\r\n      this.applyChartValues();\r\n      this.typeReleves.forEach(typeReleve => {\r\n        this.analyseService.getAnalyseByReleveType(typeReleve.id).subscribe((analyses) => {\r\n          let count = 1;\r\n          for (let i in analyses) {\r\n            const analyse = analyses[i];\r\n            this.chartValues[typeReleve.id]['columns'].push(analyse.Dangerosite.message);\r\n            this.chartValues[typeReleve.id]['colors'].push(analyse.Dangerosite.Couleur.label);\r\n            this.chartValues[typeReleve.id]['series'][count++] = { lineWidth: 1 };\r\n            if (analyse.Dangerosite.Couleur.id != RED_COLOR_ID) {\r\n              this.chartValues[typeReleve.id]['columns'].push(analyse.Dangerosite.message);\r\n              this.chartValues[typeReleve.id]['colors'].push(analyse.Dangerosite.Couleur.label);\r\n              this.chartValues[typeReleve.id]['series'][count++] = { lineWidth: 1 };\r\n            }\r\n            this.chartValues[typeReleve.id]['data'].forEach(d => {\r\n              if (analyse.Dangerosite.Couleur.id == RED_COLOR_ID) {\r\n                if (analyse.mini == 0) {\r\n                  d.push(analyse.maxi)\r\n                } else {\r\n                  d.push(analyse.mini)\r\n                }\r\n              } else {\r\n                d.push(analyse.mini)\r\n                d.push(analyse.maxi)\r\n              }\r\n            });\r\n          }\r\n        })\r\n      });\r\n    });\r\n  }\r\n\r\n  changeType() {\r\n    this.idTypeSelected = this.analyseForm.value.TypeReleveId;\r\n    this.applyChartValues();\r\n  }\r\n\r\n  applyChartValues(): void {\r\n    this.chart.data = this.chartValues[this.idTypeSelected]['data'];\r\n    this.chart.columns = this.chartValues[this.idTypeSelected]['columns'];\r\n    this.chart.options['colors'] = this.chartValues[this.idTypeSelected]['colors'];\r\n    this.chart.options['series'] = this.chartValues[this.idTypeSelected]['series'];\r\n  }\r\n\r\n  cursor(cursorType: string) {\r\n    document.getElementsByTagName(\"body\")[0].style.cursor = cursorType;\r\n  }\r\n}\r\n","<app-navbar [navElems]=\"this.navElems\"></app-navbar>\r\n\r\n<div class=\"flexrow\">\r\n  <div *ngIf=\"connected; else elseError\" class=\"conteneurPage\">\r\n    <div>\r\n      <H3>Analyses</H3>\r\n      <form [formGroup]=\"analyseForm\">\r\n        <div class=\"form-group\">\r\n          <label for=\"TypeReleveId\">Type du relevé :</label>\r\n          <select class=\"form-control\" id=\"TypeReleveId\" formControlName=\"TypeReleveId\" (change)=\"changeType()\">\r\n            <option *ngFor=\"let type of typeReleves\" value=\"{{type.id}}\">{{type.label}}</option>\r\n          </select>\r\n        </div>\r\n      </form>\r\n    </div>\r\n    \r\n    <div *ngIf=\"idTypeSelected != '-1'\">\r\n      <google-chart\r\n        [width]=\"800\"\r\n        [title]=\"chart.title\"\r\n        [type]=\"chart.type\"\r\n        [data]=\"chart.data\"\r\n        [columns]=\"chart.columns\"\r\n        [options]=\"chart.options\"\r\n      >\r\n      </google-chart>\r\n    </div>\r\n  </div>\r\n\r\n  <ng-template #elseError>\r\n    <app-error-message [message]=\"this.errorMessage\"></app-error-message>\r\n  </ng-template>\r\n</div>\r\n\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'front';\r\n}\r\n\r\n/*sessionStorage.removeItem('id');*/\r\n\r\n","<router-outlet></router-outlet>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UtilisateurService } from '../services/utilisateur.service';\r\nimport { ReleveService } from '../services/releve.service';\r\nimport { TypeReleveService } from '../services/type-releve.service';\r\nimport { Releve, ComplexeReleve } from '../models/releve.model';\r\nimport { TypeReleve } from '../models/typeReleve.model';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-releve',\r\n  templateUrl: './releve.component.html',\r\n  styleUrls: ['./releve.component.css']\r\n})\r\n\r\nexport class ReleveComponent implements OnInit {\r\n  releves?: ComplexeReleve[];\r\n  id: string | null;\r\n  typeReleves: TypeReleve[];\r\n  switchTypeForm: FormGroup;\r\n  idType: string;\r\n  actualPage: number;\r\n  maxPage?: number;\r\n  pages: number[];\r\n  closeResult = '';\r\n  active = 1;\r\n  idReleve: number;\r\n\r\n  constructor(private fb: FormBuilder, private utilisateurService: UtilisateurService, private releveService: ReleveService, private typeReleveService: TypeReleveService, private modalService: NgbModal) {\r\n    this.id = sessionStorage?.getItem('id');\r\n    this.typeReleves = [];\r\n    this.switchTypeForm = this.fb.group({\r\n      typeReleve: ['', Validators.required],\r\n    });\r\n    this.idType = '-1';\r\n    this.actualPage = 1;\r\n    this.pages = [];\r\n    this.idReleve = 0;\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getReleves();\r\n    this.getTypeReleves();\r\n  }\r\n\r\n  getReleves(): void{\r\n    this.cursor(\"wait\");\r\n    if (this.idType === '-1'){\r\n      this.utilisateurService.getUserRelevesFilterPage(this.id, this.actualPage).subscribe((releves) => {\r\n        this.releves = releves.complexesReleves;\r\n        this.maxPage = releves.nbPages;\r\n        this.pages = Array(this.maxPage).fill(1).map((x, i) => i + 1);\r\n        this.cursor(\"initial\");\r\n      });\r\n    }\r\n    else {\r\n      this.utilisateurService.getUserRelevesFilterTypePage(this.id, this.idType, this.actualPage).subscribe((releves) => {\r\n        this.releves = releves.complexesReleves;\r\n        this.maxPage = releves.nbPages;\r\n        this.pages = Array(this.maxPage).fill(1).map((x, i) => i + 1);\r\n        this.cursor(\"initial\");\r\n      });\r\n    }\r\n  }\r\n\r\n  dateFormat(date: string): string {\r\n    const dateSplit = date.split('-');\r\n\r\n    return '' + dateSplit[2].split('T')[0] + '/' + dateSplit[1] + '/' + dateSplit[0];\r\n  }\r\n\r\n  deleteReleve(id: number): void{\r\n    this.releveService.deleteReleves(id).subscribe((supression) => {\r\n      if (supression) {\r\n        this.getReleves();\r\n      } // TODO else avec msg d'erreur\r\n    });\r\n  }\r\n\r\n  create(releve: Releve): void {\r\n    this.releveService.createReleve(releve).subscribe((releve) => {\r\n      this.getReleves();\r\n    });\r\n  }\r\n\r\n  getTypeReleves(): void{\r\n    this.typeReleveService.getTypeReleves().subscribe((typeReleves) => {\r\n      this.typeReleves = typeReleves;\r\n    });\r\n  }\r\n\r\n  selectType(): void{\r\n    this.actualPage = 1;\r\n    this.idType = this.switchTypeForm.value.typeReleve;\r\n    this.getReleves();\r\n  }\r\n\r\n  pre(): void{\r\n    this.actualPage--;\r\n    this.getReleves();\r\n  }\r\n\r\n  next(): void{\r\n    this.actualPage++;\r\n    this.getReleves();\r\n  }\r\n\r\n  page(page: number): void{\r\n    this.actualPage = page;\r\n    this.getReleves();\r\n  }\r\n\r\n  open(content: any, idReleve: number): void {\r\n    this.idReleve = idReleve;\r\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n    }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n\r\n  close(reason: string): void {\r\n    this.modalService.dismissAll(reason);\r\n  }\r\n  \r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n\r\n  edit(releve: Releve): void {\r\n    this.releveService.editReleve(releve, releve.id).subscribe((releve) => {\r\n      this.getReleves();\r\n      this.close(\"Modification réussi.\");\r\n    });\r\n  }\r\n\r\n  cursor(cursorType: string) {\r\n    document.getElementsByTagName(\"body\")[0].style.cursor = cursorType;\r\n  }\r\n}","<ng-template #content let-modal>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\" id=\"edit-modal\">Modification</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <app-edit-releve [idReleve]=\"this.idReleve\" (editReleve)=\"edit($event)\"></app-edit-releve>\r\n  </div>\r\n</ng-template>\r\n\r\n<div>\r\n<!-- \t<p>You can do filter table data, in this case with observables and our <code>NgbHighlight</code> component used in Typeahead</p> -->\r\n\r\n\t<app-creation-releve (createReleve)=\"create($event)\"></app-creation-releve>\r\n\r\n\t<h3>Mes relevés</h3>\r\n\r\n  <app-pagination (goToPre)=\"pre()\" (goToNext)=\"next()\" (goToPage)=\"page($event)\" [actualPage]=\"this.actualPage\" [maxPage]=\"this.maxPage\"  [pages]=\"this.pages\"></app-pagination>\r\n\r\n\t<table class=\"table table-striped table-responsive\">\r\n\t\t<thead>\r\n\t\t\t<tr>\r\n        <th scope=\"col\">\r\n          <div class=\"flexrow typePos\">\r\n            Type\r\n            <form [formGroup]=\"switchTypeForm\">\r\n            <select class=\"form-control\" formControlName=\"typeReleve\" id=\"typeReleve\" (change)=\"selectType()\">\r\n              <option value=\"-1\">Sans filtre</option>\r\n              <option *ngFor=\"let type of typeReleves\" value=\"{{type.id}}\">{{type.label}}</option>\r\n            </select>\r\n            </form>\r\n          </div>\r\n        </th>\r\n\t\t\t\t<th scope=\"col\">Date</th>\r\n\t\t\t\t<th scope=\"col\">Valeur</th>\r\n\t\t\t\t<th scope=\"col\">Information</th>\r\n\t\t\t\t<th scope=\"col\">Actions</th>\r\n\t\t\t</tr>\r\n\t\t</thead>\r\n\t\t<tbody>\r\n\t\t\t<tr *ngFor=\"let complexeReleve of releves\">\r\n\t\t\t\t<td>{{complexeReleve.releve.TypeReleve.label}}</td>\r\n\t\t\t\t<td>{{this.dateFormat(complexeReleve.releve.prise_de_mesure)}}</td>\r\n\t\t\t\t<td>{{complexeReleve.releve.valeur}}</td>\r\n\t\t\t\t<td *ngIf=\"complexeReleve.analyse ; else noAnalyse\">\r\n          <span class=\"pastille\" style=\"background-color: {{complexeReleve.analyse.Dangerosite.Couleur.label}}\"></span>&nbsp;{{complexeReleve.analyse.Dangerosite.message}}\r\n        </td>\r\n\t\t\t\t<ng-template #noAnalyse>\r\n          <td>Indisponible.</td>\r\n        </ng-template>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<div class=\"ConteneurBtns\">\r\n\t\t\t\t\t\t<span class=\"buttonPoubelle\" (click)=\"this.deleteReleve(complexeReleve.releve.id)\"><i class=\"fas fa-trash-alt\"></i></span>\r\n\t\t\t\t\t\t<span class=\"buttonEdit\" (click)=\"open(content, complexeReleve.releve.id)\"><i class=\"fas fa-edit\"></i></span>\r\n\t\t\t\t\t\t<!-- <i class=\"fas fa-check-circle\"></i> -->\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</td>\r\n\t\t\t</tr>\r\n\t\t</tbody>\r\n\t</table>\r\n\r\n  <app-pagination (goToPre)=\"pre()\" (goToNext)=\"next()\" (goToPage)=\"page($event)\" [actualPage]=\"this.actualPage\" [maxPage]=\"this.maxPage\"  [pages]=\"this.pages\"></app-pagination>\r\n\r\n</div>\r\n","import { Component, OnInit, Injectable, Output, EventEmitter, Input} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {TypeReleveService} from '../services/type-releve.service';\r\nimport {TypeReleve} from '../models/typeReleve.model';\r\nimport {Releve} from '../models/releve.model';\r\nimport {ReleveService} from '../services/releve.service';\r\nimport {NgbCalendar, NgbDateAdapter, NgbDateParserFormatter, NgbDateStruct, NgbInputDatepickerConfig, NgbDate} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n\r\n/**\r\n * This Service handles how the date is represented in scripts i.e. ngModel.\r\n */\r\n@Injectable()\r\nexport class CustomAdapter extends NgbDateAdapter<string> {\r\n\r\n  readonly DELIMITER = '-';\r\n\r\n  fromModel(value: string | null): NgbDateStruct | null {\r\n    if (value) {\r\n      const date = value.split(this.DELIMITER);\r\n      return {\r\n        day : parseInt(date[0], 10),\r\n        month : parseInt(date[1], 10),\r\n        year : parseInt(date[2], 10)\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  toModel(date: NgbDateStruct | null): string | null {\r\n    return date ? date.day + this.DELIMITER + date.month + this.DELIMITER + date.year : null;\r\n  }\r\n}\r\n\r\n/**\r\n * This Service handles how the date is rendered and parsed from keyboard i.e. in the bound input field.\r\n */\r\n@Injectable()\r\nexport class CustomDateParserFormatter extends NgbDateParserFormatter {\r\n\r\n  readonly DELIMITER = '/';\r\n\r\n  parse(value: string): NgbDateStruct | null {\r\n    if (value) {\r\n      const date = value.split(this.DELIMITER);\r\n      return {\r\n        day : parseInt(date[0], 10),\r\n        month : parseInt(date[1], 10),\r\n        year : parseInt(date[2], 10)\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  addZero(num: number): string {\r\n  \treturn num > 9 ? '' + num : '0' + num;\r\n  }\r\n\r\n  format(date: NgbDateStruct | null): string {\r\n    return date ? this.addZero(date.day) + this.DELIMITER + this.addZero(date.month) + this.DELIMITER + this.addZero(date.year) : '';\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-edit-releve',\r\n  templateUrl: './edit-releve.component.html',\r\n  styleUrls: ['./edit-releve.component.css'],\r\n\r\n  providers: [\r\n    {provide: NgbDateAdapter, useClass: CustomAdapter},\r\n    {provide: NgbDateParserFormatter, useClass: CustomDateParserFormatter},\r\n    NgbInputDatepickerConfig\r\n  ]\r\n})\r\n\r\nexport class EditReleveComponent implements OnInit {\r\n\r\n  error: boolean;\r\n  errorMessage: string;\r\n  editReleveForm: FormGroup;\r\n  userId: string | null;\r\n  add: boolean;\r\n  validMessage: string;\r\n  typeReleves: TypeReleve[];\r\n  today: NgbDate;\r\n\r\n  @Input()\r\n  idReleve: number;\r\n\r\n  @Output()\r\n  editReleve: EventEmitter<Releve> = new EventEmitter<Releve>();\r\n\r\n  constructor(private fb: FormBuilder, private typeReleveService: TypeReleveService, private calendar: NgbCalendar, private dateAdapter: NgbDateAdapter<string>, private config: NgbInputDatepickerConfig, private releveService: ReleveService) {\r\n  \tthis.typeReleves = [];\r\n    this.error = false;\r\n    this.errorMessage = 'Un problème est survenu. Vérifiez votre connexion.';\r\n    this.userId = sessionStorage.getItem('id');\r\n    this.add = false;\r\n    this.validMessage = 'Le relevé a bien été modifié.';\r\n    this.today = this.calendar.getToday();\r\n    this.idReleve = 0;\r\n    this.editReleveForm = this.fb.group({\r\n      TypeReleveId: ['', Validators.required],\r\n      valeur: ['', Validators.required],\r\n      prise_de_mesure: ['', Validators.required], \r\n    });\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  \tthis.getTypeReleves();\r\n\r\n  \tthis.releveService.getReleve(this.idReleve).subscribe((releve) => {\r\n\r\n\t  const dateSplit = releve.prise_de_mesure.split('-');\r\n      const dateMesure = {year: +dateSplit[0], month: +dateSplit[1], day: +dateSplit[2].split('T')[0]};\r\n\r\n  \t  this.editReleveForm = this.fb.group({\r\n  \t  \tid: [this.idReleve, Validators.required],\r\n\t    TypeReleveId: [releve.TypeReleveId, Validators.required],\r\n\t    valeur: [releve.valeur, Validators.required],\r\n\t    prise_de_mesure: [this.dateAdapter.toModel(dateMesure)!, Validators.required], \r\n\t  });\r\n  \t});\r\n  }\r\n\r\n  getTypeReleves(): void{\r\n    this.typeReleveService.getTypeReleves().subscribe((typeReleves) => {\r\n      this.typeReleves = typeReleves;\r\n    });\r\n  }\r\n\r\n  edit(): void {\r\n  \tthis.editReleveForm.value.UtilisateurId = this.userId;\r\n\r\n    const splitDate = this.editReleveForm.value.prise_de_mesure.split('-');\r\n\r\n    this.editReleveForm.value.prise_de_mesure = `${splitDate[2]}-${splitDate[1]}-${splitDate[0]}`;\r\n\r\n  \tthis.editReleve.emit(this.editReleveForm.value);\r\n  }\r\n}\r\n","<form [formGroup]=\"editReleveForm\" (ngSubmit)=\"edit()\">\r\n\r\n  <app-error-message *ngIf=\"error\" [message]=\"this.errorMessage\"></app-error-message>\r\n  <app-valid-message *ngIf=\"add\" [message]=\"this.validMessage\"></app-valid-message>\r\n\r\n  <div class=\"form-group\">\r\n    <label for=\"TypeReleveId\">Type du relevé :</label>\r\n    <select class=\"form-control\" formControlName=\"TypeReleveId\" id=\"TypeReleveId\">\r\n      <option *ngFor=\"let type of typeReleves\" value=\"{{type.id}}\">{{type.label}}</option>\r\n    </select>\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <label for=\"valeur\">Valeur</label>\r\n    <input type=\"number\" class=\"form-control\" id=\"valeur\" placeholder=\"5.5\" formControlName=\"valeur\">\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <label for=\"prise_de_mesure\">Date du relevé</label>\r\n    <div class=\"input-group\">\r\n      <input class=\"form-control\" placeholder=\"dd/mm/aaaa\" name=\"prise_de_mesure\" id=\"prise_de_mesure\" formControlName=\"prise_de_mesure\" ngbDatepicker #d=\"ngbDatepicker\" [minDate]=\"{year: 1900, month: 01, day: 01}\" [maxDate]=\"this.today\">\r\n      <div class=\"input-group-append\">\r\n        <button class=\"btn btn-outline-secondary calendar\" (click)=\"d.toggle()\" type=\"button\"><i class=\"fas fa-calendar-alt\"></i></button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"modal-footer\">\r\n    <button type=\"submit\" class=\"btn btn-outline-dark\">AJOUTER</button>\r\n  </div>\r\n</form>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { AuthentificationComponent } from './authentification/authentification.component';\r\nimport { AccueilComponent } from './accueil/accueil.component';\r\n\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\nimport { CreateUserComponent } from './create-user/create-user.component';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport { ErrorMessageComponent } from './error-message/error-message.component';\r\nimport { ProfilPageComponent } from './profil-page/profil-page.component';\r\nimport { AnalysePageComponent } from './analyse-page/analyse-page.component';\r\nimport { RelevePageComponent } from './releve-page/releve-page.component';\r\nimport { EditUserComponent } from './edit-user/edit-user.component';\r\nimport { EditProfilsComponent } from './edit-profils/edit-profils.component';\r\nimport { ValidMessageComponent } from './valid-message/valid-message.component';\r\nimport {ProfilService} from './services/profil.service';\r\nimport {UtilisateurService} from './services/utilisateur.service';\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\nimport { environment } from '../environments/environment';\r\nimport { ReleveService } from './services/releve.service';\r\nimport { AnalyseService } from './services/analyse.service';\r\nimport { TypeReleveService } from './services/type-releve.service';\r\nimport { ReleveComponent } from './releve/releve.component';\r\nimport { CreationReleveComponent } from './creation-releve/creation-releve.component';\r\nimport { GoogleChartsModule } from 'angular-google-charts';\r\nimport { EditReleveComponent } from './edit-releve/edit-releve.component';\r\nimport { PaginationComponent } from './pagination/pagination.component';\r\n\r\nconst appRoutes: Routes = [\r\n  { path: 'informations', component: AccueilComponent },\r\n  { path: '', component: AccueilComponent },\r\n  { path: 'profil', component: ProfilPageComponent },\r\n  { path: 'releves', component: RelevePageComponent },\r\n  { path: 'analyses', component: AnalysePageComponent },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    AuthentificationComponent,\r\n    AccueilComponent,\r\n    CreateUserComponent,\r\n    ErrorMessageComponent,\r\n    ProfilPageComponent,\r\n    AnalysePageComponent,\r\n    RelevePageComponent,\r\n    EditUserComponent,\r\n    EditProfilsComponent,\r\n    ValidMessageComponent,\r\n    ReleveComponent,\r\n    CreationReleveComponent,\r\n    EditReleveComponent,\r\n    PaginationComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    NgbModule,\r\n    FontAwesomeModule,\r\n    [RouterModule.forRoot(appRoutes)],\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    GoogleChartsModule,\r\n    ServiceWorkerModule.register('../ngsw-worker.js', { enabled: environment.production })\r\n  ],\r\n  providers: [\r\n    UtilisateurService,\r\n    ProfilService,\r\n    ReleveService,\r\n    AnalyseService,\r\n    TypeReleveService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Releve, ComplexeReleve} from '../models/releve.model';\r\nimport { VariablesGlobales } from './global';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReleveService {\r\n\r\n  constructor(private http: HttpClient) {\r\n\r\n  }\r\n\r\n  public getReleves(): Observable<ComplexeReleve[]> {\r\n    return this.http.get<ComplexeReleve[]>(`${VariablesGlobales.baseURL}releve_medical`);\r\n  }\r\n\r\n  public deleteReleves(id: number): Observable<boolean> {\r\n    return this.http.delete<boolean>(`${VariablesGlobales.baseURL}releve_medical/${id}`);\r\n  }\r\n\r\n  public createReleve(releve: Releve): Observable<Releve> {\r\n    return this.http.post<Releve>(`${VariablesGlobales.baseURL}releve_medical`, releve);\r\n  }\r\n\r\n  public getReleve(id: number): Observable<Releve> {\r\n    return this.http.get<Releve>(`${VariablesGlobales.baseURL}releve_medical/${id}`);\r\n  }\r\n\r\n  public editReleve(releve: Releve, id: number): Observable<Releve> {\r\n    return this.http.put<Releve>(`${VariablesGlobales.baseURL}releve_medical/${id}`, releve);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {Analyse} from '../models/analyse.model';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AnalyseService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public getAnalyseByReleveType(id: number | null): Observable<Analyse[]> {\r\n    return this.http.get<Analyse[]>(`http://localhost:3000/api/analyse/typeReleve/${id}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {Utilisateur, UtilisateurLogin} from '../models/utilisateur.model';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {ComplexeRelevePaginate} from '../models/releve.model';\r\nimport { VariablesGlobales } from './global';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UtilisateurService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public authenticate(userLogin: UtilisateurLogin): Observable<Utilisateur> {\r\n    return this.http.get<Utilisateur>(`${VariablesGlobales.baseURL}utilisateur/authentification/${userLogin.login}/${userLogin.password}`);\r\n  }\r\n\r\n  public createUser(user: Utilisateur): Observable<Utilisateur> {\r\n    return this.http.post<Utilisateur>(`${VariablesGlobales.baseURL}utilisateur/`, user);\r\n  }\r\n\r\n  public getUser(id: string | null): Observable<Utilisateur> {\r\n    return this.http.get<Utilisateur>(`${VariablesGlobales.baseURL}utilisateur/${id}`);\r\n  }\r\n\r\n  public updateUser(id: string | null, user: Utilisateur): Observable<boolean> {\r\n    return this.http.put<boolean>(`${VariablesGlobales.baseURL}utilisateur/${id}`, user);\r\n  }\r\n\r\n  public addUserProfil(idUser: number, idProfil: number): Observable<boolean> {\r\n    return this.http.post<boolean>(`${VariablesGlobales.baseURL}utilisateur/${idUser}/profil/${idProfil}`, {});\r\n  }\r\n\r\n  public removeUserProfil(idUser: number, idProfil: number): Observable<boolean> {\r\n    return this.http.delete<boolean>(`${VariablesGlobales.baseURL}utilisateur/${idUser}/profil/${idProfil}`);\r\n  }\r\n\r\n  public getUserReleves(id: string | null): Observable<ComplexeRelevePaginate> {\r\n    return this.http.get<ComplexeRelevePaginate>(`${VariablesGlobales.baseURL}utilisateur/${id}/releves`);\r\n  }\r\n\r\n  public getUserRelevesFilterPage(id: string | null, page: number): Observable<ComplexeRelevePaginate> {\r\n    return this.http.get<ComplexeRelevePaginate>(`${VariablesGlobales.baseURL}utilisateur/${id}/releves?page=${page}`);\r\n  }\r\n\r\n  public getUserRelevesFilterTypePage(id: string | null, idType: string, page: number): Observable<ComplexeRelevePaginate> {\r\n    return this.http.get<ComplexeRelevePaginate>(`${VariablesGlobales.baseURL}utilisateur/${id}/releves?type=${idType}?page=${page}`);\r\n  }\r\n}\r\n","import {Component, EventEmitter, OnInit, Output, Injectable } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport {UtilisateurService} from '../services/utilisateur.service';\r\nimport {Utilisateur} from '../models/utilisateur.model';\r\nimport {NgbCalendar, NgbDateAdapter, NgbDateParserFormatter, NgbDateStruct, NgbInputDatepickerConfig, NgbDate} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n\r\n/**\r\n * This Service handles how the date is represented in scripts i.e. ngModel.\r\n */\r\n@Injectable()\r\nexport class CustomAdapter extends NgbDateAdapter<string> {\r\n\r\n  readonly DELIMITER = '-';\r\n\r\n  fromModel(value: string | null): NgbDateStruct | null {\r\n    if (value) {\r\n      let date = value.split(this.DELIMITER);\r\n      return {\r\n        day : parseInt(date[0], 10),\r\n        month : parseInt(date[1], 10),\r\n        year : parseInt(date[2], 10)\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  toModel(date: NgbDateStruct | null): string | null {\r\n    return date ? date.day + this.DELIMITER + date.month + this.DELIMITER + date.year : null;\r\n  }\r\n}\r\n\r\n/**\r\n * This Service handles how the date is rendered and parsed from keyboard i.e. in the bound input field.\r\n */\r\n@Injectable()\r\nexport class CustomDateParserFormatter extends NgbDateParserFormatter {\r\n\r\n  readonly DELIMITER = '/';\r\n\r\n  parse(value: string): NgbDateStruct | null {\r\n    if (value) {\r\n      let date = value.split(this.DELIMITER);\r\n      return {\r\n        day : parseInt(date[0], 10),\r\n        month : parseInt(date[1], 10),\r\n        year : parseInt(date[2], 10)\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  addZero(num: number): string {\r\n    return num > 9 ? \"\" + num : \"0\" + num;\r\n  }\r\n\r\n  format(date: NgbDateStruct | null): string {\r\n    return date ? this.addZero(date.day) + this.DELIMITER + this.addZero(date.month) + this.DELIMITER + this.addZero(date.year) : '';\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-create-user',\r\n  templateUrl: './create-user.component.html',\r\n  styleUrls: ['./create-user.component.css'],\r\n\r\n  providers: [\r\n    {provide: NgbDateAdapter, useClass: CustomAdapter},\r\n    {provide: NgbDateParserFormatter, useClass: CustomDateParserFormatter},\r\n    NgbInputDatepickerConfig\r\n  ]\r\n})\r\n\r\nexport class CreateUserComponent implements OnInit {\r\n\r\n  @Output()\r\n  closeModal: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  createUserForm: FormGroup;\r\n  error: boolean;\r\n  errorMessage: string;\r\n  today: NgbDate;\r\n\r\n  constructor(private fb: FormBuilder, private userService: UtilisateurService, private calendar: NgbCalendar, private dateAdapter: NgbDateAdapter<string>, private config: NgbInputDatepickerConfig) {\r\n    this.createUserForm = this.fb.group({\r\n      nom: ['', Validators.required],\r\n      prenom: ['', Validators.required],\r\n      naissance: ['', Validators.required],\r\n      login: ['', Validators.required],\r\n      mot_de_passe: ['', Validators.required],\r\n    });\r\n\r\n    this.errorMessage = 'Une erreur est survenue';\r\n    this.error = false;\r\n    this.today = this.calendar.getToday();\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  create(): void{\r\n\r\n    const splitDate = this.createUserForm.value.naissance.split('-');\r\n\r\n    this.createUserForm.value.naissance = `${splitDate[2]}-${splitDate[1]}-${splitDate[0]}`;\r\n\r\n    this.userService.createUser(this.createUserForm.value).subscribe( (user) => {\r\n\r\n      if (user as Utilisateur){\r\n        sessionStorage.setItem('id', String(user.id));\r\n        sessionStorage.setItem('login', String(user.login));\r\n        this.close('close modal after création');\r\n      }\r\n      else {\r\n        this.error = true;\r\n      }\r\n\r\n    });\r\n\r\n  }\r\n\r\n  close(reason: string): void {\r\n    this.closeModal.emit(reason);\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"createUserForm\">\r\n\r\n  <app-error-message *ngIf=\"error\" [message]=\"this.errorMessage\"></app-error-message>\r\n\r\n  <div class=\"form-group\">\r\n    <label for=\"nom\">Nom</label>\r\n    <input type=\"text\" class=\"form-control\" id=\"nom\" placeholder=\"Entrez votre nom de famille\" formControlName=\"nom\">\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <label for=\"prenom\">Prénom</label>\r\n    <input type=\"text\" class=\"form-control\" id=\"prenom\" placeholder=\"Entrez votre prénom\" formControlName=\"prenom\">\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <label for=\"naissance\">Date de Naissance</label>\r\n    <div class=\"input-group\">\r\n      <input class=\"form-control\" placeholder=\"dd/mm/yyyy\"\r\n             name=\"naissance\" id=\"naissance\" formControlName=\"naissance\" ngbDatepicker #d=\"ngbDatepicker\" [minDate]=\"{year: 1900, month: 01, day: 01}\" [maxDate]=\"this.today\">\r\n      <div class=\"input-group-append\">\r\n        <button class=\"btn btn-outline-secondary calendar\" (click)=\"d.toggle()\" type=\"button\"><i class=\"fas fa-calendar-alt\"></i></button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <label for=\"login\">Pseudo</label>\r\n    <input type=\"text\" class=\"form-control\" id=\"login\" placeholder=\"Entrez votre pseudo\" formControlName=\"login\">\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <label for=\"mot_de_passe\">Mot de passe</label>\r\n    <input type=\"password\" class=\"form-control\" id=\"mot_de_passe\" placeholder=\"MotDePasse\" formControlName=\"mot_de_passe\">\r\n  </div>\r\n\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"create()\">VALIDER</button>\r\n  </div>\r\n</form>\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-pagination',\r\n  templateUrl: './pagination.component.html',\r\n  styleUrls: ['./pagination.component.css']\r\n})\r\nexport class PaginationComponent implements OnInit {\r\n\r\n  @Input()\r\n  actualPage: number;\r\n\r\n  @Input()\r\n  maxPage?: number;\r\n\r\n  @Input()\r\n  pages: number[];\r\n\r\n  @Output()\r\n  goToPre: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  @Output()\r\n  goToNext: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  @Output()\r\n  goToPage: EventEmitter<number> = new EventEmitter<number>();\r\n\r\n  constructor() {\r\n    this.actualPage = 1;\r\n    this.pages = [];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  pre(): void{\r\n\r\n  \tthis.goToPre.emit();\r\n  }\r\n\r\n  next(): void{\r\n\r\n  \tthis.goToNext.emit();\r\n  }\r\n\r\n  page(page: number): void{\r\n\r\n  \tthis.goToPage.emit(page);\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\n  <div class=\"pages\">\r\n    <span *ngIf=\"actualPage != 1; else disablePre\" class=\"page pre\" (click)=\"pre()\">Précédent</span>\r\n    <ng-template #disablePre>\r\n      <span class=\"page pre disabled\">Précédent</span>\r\n    </ng-template>\r\n    <span *ngFor=\"let i of this.pages\">\r\n      <span *ngIf=\"actualPage != i; else disablePage\" class=\"page\" (click)=\"page(i)\">{{i}}</span>\r\n      <ng-template #disablePage>\r\n        <span class=\"page disabled\">{{i}}</span>\r\n      </ng-template>\r\n    </span>\r\n    <span *ngIf=\"actualPage != maxPage; else disableNext\" class=\"page next\" (click)=\"next()\">Suivant</span>\r\n    <ng-template #disableNext>\r\n      <span class=\"page next disabled\">Suivant</span>\r\n    </ng-template>\r\n  </div>","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Menu} from '../models/menu.model';\r\nimport {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\r\nimport {Router} from \"@angular/router\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  closeResult = '';\r\n  active = 1;\r\n\r\n  @Input()\r\n  navElems?: Menu;\r\n  connected: boolean;\r\n  login?: string | null;\r\n\r\n  constructor(private modalService: NgbModal, private router: Router) {\r\n    /*this.navElems = {accueil: true, releves: false, analyses: false, profil: false};*/\r\n    this.connected = sessionStorage?.getItem('id') !== null;\r\n  }\r\n\r\n  open(content: any): void {\r\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n    }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n\r\n  close(reason: string): void {\r\n    this.modalService.dismissAll(reason);\r\n    this.connected = true;\r\n    this.login = sessionStorage.getItem('login');\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n\r\n\r\n  }\r\n\r\n  disconnect(): void {\r\n    this.connected = false;\r\n    sessionStorage.clear();\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    if (sessionStorage?.getItem('id') !== null){\r\n      this.login = sessionStorage.getItem('login');\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <a class=\"navbar-brand\" [routerLink]=\"['/']\">MonAssistantMedical</a>\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <ul class=\"navbar-nav mr-auto\">\r\n      <li class=\"nav-item active\" *ngIf=\"navElems?.accueil; else accueilDeactivate\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/informations']\">Informations <span class=\"sr-only\">(current)</span></a>\r\n      </li>\r\n      <ng-template #accueilDeactivate>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" [routerLink]=\"['/informations']\">Informations </a>\r\n        </li>\r\n      </ng-template>\r\n      <li class=\"nav-item active\" *ngIf=\"navElems?.profil; else profilDeactivate\">\r\n        <a *ngIf=\"this.connected; else elseProfil\" class=\"nav-link\" [routerLink]=\"['/profil']\">Profil <span class=\"sr-only\">(current)</span></a>\r\n        <ng-template #elseProfil>\r\n          <a class=\"nav-link disabled\" href=\"#\">Profil</a>\r\n        </ng-template>\r\n      </li>\r\n      <ng-template #profilDeactivate>\r\n        <li class=\"nav-item\">\r\n          <a *ngIf=\"this.connected; else elseProfil\" class=\"nav-link\" [routerLink]=\"['/profil']\">Profil </a>\r\n          <ng-template #elseProfil>\r\n            <a class=\"nav-link disabled\" href=\"#\">Profil</a>\r\n          </ng-template>\r\n        </li>\r\n      </ng-template>\r\n      <li class=\"nav-item active\" *ngIf=\"navElems?.releves; else relevesDeactivate\">\r\n        <a *ngIf=\"this.connected; else elseReleve\" class=\"nav-link\" [routerLink]=\"['/releves']\">Relevés <span class=\"sr-only\">(current)</span></a>\r\n        <ng-template #elseReleve>\r\n          <a class=\"nav-link disabled\" href=\"#\">Relevés</a>\r\n        </ng-template>\r\n      </li>\r\n      <ng-template #relevesDeactivate>\r\n        <li class=\"nav-item\">\r\n          <a *ngIf=\"this.connected; else elseReleve\" class=\"nav-link\" [routerLink]=\"['/releves']\">Relevés </a>\r\n          <ng-template #elseReleve>\r\n            <a class=\"nav-link disabled\" href=\"#\">Relevés</a>\r\n          </ng-template>\r\n        </li>\r\n      </ng-template>\r\n      <li class=\"nav-item active\" *ngIf=\"navElems?.analyses; else analysesDeactivate\">\r\n        <a *ngIf=\"connected; else elseAnalyse\" class=\"nav-link\" [routerLink]=\"['/analyses']\">Analyses <span class=\"sr-only\">(current)</span></a>\r\n        <ng-template #elseAnalyse>\r\n          <a class=\"nav-link disabled\" href=\"#\">Analyses</a>\r\n        </ng-template>\r\n      </li>\r\n      <ng-template #analysesDeactivate>\r\n        <li class=\"nav-item\">\r\n          <a *ngIf=\"connected; else elseAnalyse\" class=\"nav-link\" [routerLink]=\"['/analyses']\">Analyses </a>\r\n          <ng-template #elseAnalyse>\r\n            <a class=\"nav-link disabled\" href=\"#\">Analyses</a>\r\n          </ng-template>\r\n        </li>\r\n      </ng-template>\r\n    </ul>\r\n    <form class=\"form-inline my-2 my-lg-0\">\r\n      <button *ngIf=\"!connected; else elseBtn\" class=\"btn btn-outline-dark my-2 my-sm-0\" type=\"button\" (click)=\"open(content)\">Connexion</button>\r\n      <ng-template #elseBtn>\r\n          <button class=\"btn btn-outline-dark my-2 my-sm-0\" type=\"button\" (click)=\"disconnect()\">{{login}}&nbsp;&nbsp;<i class=\"fas fa-sign-out-alt\"></i></button>\r\n      </ng-template>\r\n    </form>\r\n  </div>\r\n</nav>\r\n\r\n\r\n<ng-template #content let-modal>\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Authentification</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n\r\n    <ul ngbNav #nav=\"ngbNav\" [(activeId)]=\"active\" class=\"nav-tabs\">\r\n      <li [ngbNavItem]=\"1\">\r\n        <a ngbNavLink>Connexion</a>\r\n        <ng-template ngbNavContent>\r\n          <app-authentification (closeModal)=\"close($event)\"></app-authentification>\r\n        </ng-template>\r\n      </li>\r\n      <li [ngbNavItem]=\"2\">\r\n        <a ngbNavLink>Création</a>\r\n        <ng-template ngbNavContent>\r\n          <app-create-user (closeModal)=\"close($event)\"></app-create-user>\r\n        </ng-template>\r\n      </li>\r\n    </ul>\r\n\r\n    <div [ngbNavOutlet]=\"nav\" class=\"mt-2\"></div>\r\n\r\n  </div>\r\n</ng-template>\r\n\r\n\r\n\r\n<br>\r\n","<app-navbar [navElems]=\"this.navElems\"></app-navbar>\n\n<div class=\"flexrow\">\n  <div *ngIf=\"connected; else elseError\" class=\"conteneurPage\">\n    <app-edit-user></app-edit-user>\n    <hr>\n    <app-edit-profils></app-edit-profils>\n  </div>\n\n  <ng-template #elseError>\n    <app-error-message [message]=\"this.errorMessage\"></app-error-message>\n  </ng-template>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport {Menu} from '../models/menu.model';\n\n@Component({\n  selector: 'app-profil-page',\n  templateUrl: './profil-page.component.html',\n  styleUrls: ['./profil-page.component.css']\n})\nexport class ProfilPageComponent implements OnInit {\n\n  navElems: Menu;\n  connected: boolean;\n  errorMessage: string;\n\n  constructor() {\n    this.navElems = {accueil: false, releves: false, analyses: false, profil: true};\n    this.connected = sessionStorage?.getItem('id') !== null;\n    this.errorMessage = 'Vous êtes déconnecté. Veuillez vous connecter afin d\\'accéder à cette page';\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\n@Injectable()\r\nexport class VariablesGlobales {\r\n  /*baseURL = 'http://localhost:3000/api/';*/\r\n  public static baseURL = 'https://mammedica.alwaysdata.net/api/';\r\n}\r\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport {UtilisateurService} from '../services/utilisateur.service';\r\nimport {Utilisateur} from '../models/utilisateur.model';\r\n\r\n@Component({\r\n  selector: 'app-authentification',\r\n  templateUrl: './authentification.component.html',\r\n  styleUrls: ['./authentification.component.css']\r\n})\r\nexport class AuthentificationComponent implements OnInit {\r\n\r\n  @Output()\r\n  closeModal: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  authenticationForm: FormGroup;\r\n  error: boolean;\r\n  errorMessage: string;\r\n\r\n  constructor(private fb: FormBuilder, private userService: UtilisateurService) {\r\n    this.authenticationForm = this.fb.group({\r\n      login: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n    });\r\n    this.errorMessage = 'Login ou mot de passe incorrect';\r\n    this.error = false;\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  authenticate(): void{\r\n\r\n    this.userService.authenticate(this.authenticationForm.value).subscribe( (user) => {\r\n\r\n      if (user as Utilisateur){\r\n        sessionStorage.setItem('id', String(user.id));\r\n        sessionStorage.setItem('login', String(user.login));\r\n        this.close('close modal after authentication');\r\n      }\r\n      else {\r\n        this.error = true;\r\n      }\r\n\r\n    });\r\n\r\n  }\r\n\r\n  close(reason: string): void {\r\n    this.closeModal.emit(reason);\r\n  }\r\n\r\n\r\n}\r\n","<form [formGroup]=\"authenticationForm\">\r\n\r\n  <app-error-message *ngIf=\"error\" [message]=\"this.errorMessage\"></app-error-message>\r\n\r\n  <div class=\"form-group\">\r\n    <label for=\"login\">Pseudo</label>\r\n    <input type=\"text\" class=\"form-control\" id=\"login\" placeholder=\"Entrez votre pseudo\" formControlName=\"login\">\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <label for=\"password\">Mot de passe</label>\r\n    <input type=\"password\" class=\"form-control\" id=\"password\" placeholder=\"MotDePasse\" formControlName=\"password\">\r\n  </div>\r\n\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"authenticate()\">VALIDER</button>\r\n  </div>\r\n</form>\r\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-error-message',\n  templateUrl: './error-message.component.html',\n  styleUrls: ['./error-message.component.css']\n})\nexport class ErrorMessageComponent implements OnInit {\n\n  @Input()\n  message: string;\n\n  constructor() {\n    this.message = 'erreur';\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"flexrow\">\n  <div class=\"alert alert-danger\" role=\"alert\" style=\"width: 90%\">\n    {{ message }}\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-valid-message',\n  templateUrl: './valid-message.component.html',\n  styleUrls: ['./valid-message.component.css']\n})\nexport class ValidMessageComponent implements OnInit {\n\n  @Input()\n  message: string;\n\n  constructor() {\n    this.message = 'valide';\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"flexrow\">\n  <div class=\"alert alert-success\" role=\"alert\" style=\"width: 90%\">\n    {{ message }}\n  </div>\n</div>\n\n","<app-navbar [navElems]=\"this.navElems\"></app-navbar>\r\n\r\n\r\n<div class=\"flexrow\">\r\n  <div *ngIf=\"connected; else elseError\" class=\"conteneurPage\">\r\n  \t<app-releve></app-releve>\r\n  </div>\r\n\r\n  <ng-template #elseError>\r\n    <app-error-message [message]=\"this.errorMessage\"></app-error-message>\r\n  </ng-template>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport {Menu} from '../models/menu.model';\n\n@Component({\n  selector: 'app-releve-page',\n  templateUrl: './releve-page.component.html',\n  styleUrls: ['./releve-page.component.css']\n})\nexport class RelevePageComponent implements OnInit {\n\n  navElems: Menu;\n  connected: boolean;\n  errorMessage: string;\n\n  constructor() {\n    this.navElems = {accueil: false, releves: true, analyses: false, profil: false};\n    this.connected = sessionStorage?.getItem('id') !== null;\n    this.errorMessage = 'Vous êtes déconnecté. Veuillez vous connecter afin d\\'accéder à cette page';\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}